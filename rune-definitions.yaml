MavenRune:
  params:
  - mavenHome
  - stages
  - version
  - opts
  values:
    Image: "docker.io/sygaldry/maven-rune:{{ .version }}"
    Env:
    - stages="{{ .stages }}"
    - opts="{{ or .opts "" }}"
    Volumes:
    - '{{ or .mavenHome "~/.m2" }}:/root/.m2'
DockerRune:
  params:
  - version
  - command
  - args
  - image
  - dockerSocketPath
  - dockerConfigPath
  values:
    Image: '{{ or .image "docker.io/sygaldry/docker-rune" }}:{{ or .version "latest" }}'
    Env:
    - command="{{ .command }}"
    - args="{{ .args }}"
    Volumes:
    - '{{ or .dockerSocketPath "/var/run/docker.sock"}}:/var/run/docker.sock'
    - '{{ or .dockerConfigPath "~/.docker/config.json" }}:/root/.docker/config.json'
KubectlRune:
  params:
  - version
  - command
  - args
  - image
  - kubeConfigPath
  values:
    Image: '{{ or .image "sygaldry/kubectl-rune"}}:{{or .version "latest" }}'
    Env:
    - command="{{ .command }}"
    - args="{{ .args }}"
    Volumes:
    - '{{ or .kubeConfigPath "~/.kube/config"}}:/root/.kube/config'
NpmRune:
  params:
  - version
  - command
  - args
  - image
  values:
    Image: '{{ or .image "sygaldry/npm-rune"}}:{{or .version "latest" }}'
    Env:
    - command="{{ .command }}"
    - args="{{ or .args \"\" }}"
    Volumes:
AwsRune:
  params:
  - version
  - command
  - args
  - image
  - awsAccessKey
  - awsSecretKey
  values:
    Image: '{{ or .image "sygaldry/aws-rune"}}:{{or .version "latest" }}'
    Env:
    - command="{{ .command }}"
    - args="{{ .args }}"
    - AWS_ACCESS_KEY_ID="{{ .awsAccessKey }}"
    - AWS_SECRET_ACCESS_KEY="{{ .awsSecretKey }}"
    Volumes:
